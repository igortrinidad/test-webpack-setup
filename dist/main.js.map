{"version":3,"file":"main.js","mappings":"sBAAA,MAAMA,EAAWC,SAASC,cAAc,YACxCF,EAASG,UAAY,owBA0CrB,MAAMC,UAAoBC,YACxB,WAAAC,GACEC,QACAC,KAAKC,YAAcD,KAAKE,aAAa,CAAEC,KAAM,SAC7CH,KAAKC,YAAYG,YAAYZ,EAASa,QAAQC,WAAU,IACxDN,KAAKO,OAASP,KAAKQ,WAAWC,cAAc,SAC5CT,KAAKU,OAASV,KAAKQ,WAAWC,cAAc,SAC5CT,KAAKW,OAASX,KAAKQ,WAAWC,cAAc,SAC9C,CAEA,6BAAWG,GACT,MAAO,CAAC,QAAS,QAAS,OAAQ,gBAAiB,UACrD,CAEA,iBAAAC,GACMb,KAAKU,OAAOI,aACdd,KAAKU,OAAOK,iBAAiB,QAAQC,KAC9BA,EAAMC,OAAOC,OAASlB,KAAKmB,aAAa,aAC3CnB,KAAKoB,SAAU,EACfpB,KAAKW,OAAOU,UAAY,4BAExBrB,KAAKoB,SAAU,EACfpB,KAAKkB,MAAQF,EAAMC,OAAOC,MAC5B,GAGN,CAEA,wBAAAI,CAAyBC,EAAMC,EAAUC,GACvC,OAAQF,GACN,IAAK,QACHvB,KAAKO,OAAOc,UAAY,GAAGI,KAC3B,MACF,IAAK,OACHzB,KAAKU,OAAOgB,KAAOD,EACnB,MACF,IAAK,gBACHzB,KAAKW,OAAOU,UAAYI,EACxB,MACF,IAAK,UACHzB,KAAK2B,oBAAoBF,GAK/B,CAEA,WAAIL,GACF,OAAOpB,KAAKmB,aAAa,UAC3B,CAEA,WAAIC,CAAQF,GACJA,EACJlB,KAAK4B,aAAa,UAAW,IAE7B5B,KAAK6B,gBAAgB,UAEzB,CAEA,SAAIX,GACF,OAAOlB,KAAK8B,aAAa,QAC3B,CAEA,SAAIZ,CAAMO,GACRzB,KAAK4B,aAAa,QAASH,EAC7B,CAEA,mBAAAE,CAAoBT,GACJ,OAAVA,GACFlB,KAAKW,OAAOoB,UAAUC,OAAO,UAC7BhC,KAAKU,OAAOqB,UAAUE,IAAI,mBAE1BjC,KAAKW,OAAOoB,UAAUE,IAAI,UAC1BjC,KAAKU,OAAOqB,UAAUC,OAAO,iBAEjC,EAGFE,OAAOC,eAAeC,OAAO,eAAgBxC,E,GCxHzCyC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,OACf,C,mBCpBe,MAAMG,EAEnB,UAAOC,GACL,OAAOC,MAAM,8CACVC,MAAKC,GAAYA,EAASC,QAC/B,E,OCJFzD,SAASsB,iBAAiB,oBAAoB,KCArB,MAEvB,MAAMoC,EAAY1D,SAASgB,cAAc,eAEzC,IAAK0C,EAAW,MAAM,IAAIC,MAAM,wBAEhCP,EAAeC,MACZE,MAAKE,ICTkB,EAACG,EAASC,EAAOC,EAAkB,QAC7D,MAAMC,EAAW/D,SAASgE,yBAC1BH,EAAMI,SAAQC,IACZ,MAAMC,EAAenE,SAASC,cAAc6D,GAC5CK,EAAaC,YAAcF,EAAKG,MAChCN,EAASpD,YAAYwD,EAAY,IAEnCP,EAAQjD,YAAYoD,EAAQ,EDGxBO,CAAaZ,EAAWD,EAAM,KAAI,GACpC,EDRFc,EAAW,G","sources":["webpack://test-webpack-setup/./src/components/CustomInput.js","webpack://test-webpack-setup/webpack/bootstrap","webpack://test-webpack-setup/./src/services/api/PostServiceApi.js","webpack://test-webpack-setup/./src/index.js","webpack://test-webpack-setup/./src/loadPosts.js","webpack://test-webpack-setup/./src/populateList.js"],"sourcesContent":["const template = document.createElement(\"template\");\ntemplate.innerHTML = `\n<style> \n    :host { \n        margin-bottom: 10px; \n        display: block; \n    } \n    .invalid-field { \n        border: 1px solid red; \n    } \n    .invalid-field:focus { \n        outline-color: red; \n    } \n    .form-field { \n        display: table; \n    } \n    label, \n    input { \n        display: table-cell; \n    } \n    label { \n        padding-right: 10px; \n    } \n    .error { \n        display: block; \n    } \n    .hidden { \n        display: none; \n    } \n    ::slotted(span) { \n        color: grey; \n        font-style: italic; \n        padding-left: 10px; \n    } \n</style> \n\n<div class=\"form-field\"> \n        <label></label> \n        <input /> \n        <slot></slot> \n        <span class=\"error hidden\"></span> \n</div>`;\n\nclass CustomInput extends HTMLElement {\n  constructor() {\n    super();\n    this._shadowRoot = this.attachShadow({ mode: \"open\" });\n    this._shadowRoot.appendChild(template.content.cloneNode(true));\n    this.$label = this.shadowRoot.querySelector(\"label\");\n    this.$input = this.shadowRoot.querySelector(\"input\");\n    this.$error = this.shadowRoot.querySelector(\".error\");\n  }\n\n  static get observedAttributes() {\n    return [\"value\", \"label\", \"type\", \"error-message\", \"invalid\"];\n  }\n\n  connectedCallback() {\n    if (this.$input.isConnected) {\n      this.$input.addEventListener(\"blur\", event => {\n        if (!event.target.value && this.hasAttribute(\"required\")) {\n          this.invalid = true;\n          this.$error.innerText = \"This field is required.\";\n        } else {\n          this.invalid = false;\n          this.value = event.target.value;\n        }\n      });\n    }\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    switch (name) {\n      case \"label\":\n        this.$label.innerText = `${newValue}:`;\n        break;\n      case \"type\":\n        this.$input.type = newValue;\n        break;\n      case \"error-message\":\n        this.$error.innerText = newValue;\n        break;\n      case \"invalid\":\n        this._handleInvalidState(newValue);\n        break;\n      default:\n        break;\n    }\n  }\n\n  get invalid() {\n    return this.hasAttribute(\"invalid\");\n  }\n\n  set invalid(value) {\n    if (!!value) {\n      this.setAttribute(\"invalid\", \"\");\n    } else {\n      this.removeAttribute(\"invalid\");\n    }\n  }\n\n  get value() {\n    return this.getAttribute(\"value\");\n  }\n\n  set value(newValue) {\n    this.setAttribute(\"value\", newValue);\n  }\n\n  _handleInvalidState(value) {\n    if (value !== null) {\n      this.$error.classList.remove(\"hidden\");\n      this.$input.classList.add(\"invalid-field\");\n    } else {\n      this.$error.classList.add(\"hidden\");\n      this.$input.classList.remove(\"invalid-field\");\n    }\n  }\n}\n\nwindow.customElements.define(\"custom-input\", CustomInput);","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\n\nexport default class PostServiceApi {\n\n  static get () {\n    return fetch('https://jsonplaceholder.typicode.com/posts')\n      .then(response => response.json())\n  }\n  \n}","import { loadPosts } from \"./loadPosts.js\";\nimport CustomInput from './components/CustomInput.js';\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  loadPosts();\n});","import { populateList } from \"./populateList\";\nimport PostServiceApi from './services/api/PostServiceApi';\n\nexport const loadPosts = () => {\n\n  const postsList = document.querySelector('#posts-list');\n\n  if (!postsList) throw new Error('Posts list not found');\n\n  PostServiceApi.get()\n    .then(json => {\n      populateList(postsList, json, 'li')\n  });\n}","\nexport const populateList = (element, posts, childElementTag = 'li') => {\n  const fragment = document.createDocumentFragment()\n  posts.forEach(post => {\n    const childElement = document.createElement(childElementTag)\n    childElement.textContent = post.title\n    fragment.appendChild(childElement)\n  })\n  element.appendChild(fragment)\n}"],"names":["template","document","createElement","innerHTML","CustomInput","HTMLElement","constructor","super","this","_shadowRoot","attachShadow","mode","appendChild","content","cloneNode","$label","shadowRoot","querySelector","$input","$error","observedAttributes","connectedCallback","isConnected","addEventListener","event","target","value","hasAttribute","invalid","innerText","attributeChangedCallback","name","oldValue","newValue","type","_handleInvalidState","setAttribute","removeAttribute","getAttribute","classList","remove","add","window","customElements","define","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","PostServiceApi","get","fetch","then","response","json","postsList","Error","element","posts","childElementTag","fragment","createDocumentFragment","forEach","post","childElement","textContent","title","populateList","loadPosts"],"sourceRoot":""}